#!/bin/bash
## srv_ctl
##
## Copyright 2016 Mac Radigan
## All Rights Reserved

  d=${0%/*}; f=${0##*/}; n=${f%.*}; e=${f##*.}
  if [ -f /opt/current.env ]; 
  then
    .  /opt/current.env
  fi

  S__SUCCESS=0
  S__NO_SUCH_COMMAND=1

  export PID=/tmp
  export APP=srv

  usage()
  {
    >&2 cat <<-EOT 
		$f [args]
			  start       - start application
			  stop        - stop application
			  apache2ctl  - run Apache control
			  nginx       - run Nginx control
EOT
    exit ${S__SUCCESS}
  }

  die()
  {
    code=$1; shift
    msg=$1;  shift
    (>&2 echo "ERROR ${code}: ${msg}")
    exit $code
  }

  warn()
  {
    code=$1; shift
    msg=$1;  shift
    (>&2 echo "WARN ${code}: ${msg}")
    exit $code
  }

  if [[ "$#" == "0" ]]; then
    usage
  fi

  util()
  {
    cmd=$1; shift
    case $cmd in
      find)
        /usr/bin/find $*
        ;;
      shell)
        /bin/bash $*
        ;;
      ls)
        /bin/ls $*
        ;;
      cat)
        /bin/cat $*
        ;;
      ps)
        /bin/ps $*
        ;;
      exec)
        exec $*
        ;;
      *)
        die $S__NO_SUCH_COMMAND "invalid utility: $cmd, must be one of ( find | shell | exec | ls | cat | ps )"
        ;;
    esac
  }

  setpid()
  {
    app=$1; shift
    pid=$1; shift
    if [[ ! -e ${PID}/${app}.pid ]]; then
      echo "${app} pid:${pid}"
      echo ${pid}>${PID}/${app}.pid
    else
      echo "${app} process already running.  file exists ${PID}/${app}.pid (${app})"
    fi
  }

  unsetpid()
  {
    app=$1; shift
    if [[ ! -e ${PID}/${app}.pid ]]; then
      echo "kill "`cat ${PID}/${app}.pid`" (${app})"
      kill `cat ${PID}/${app}.pid`
    else
      echo "${app} process not running.  no such file ${PID}/${app}.pid ($app)"
    fi
  }

  live-start()
  {
    cd /opt/srv/mapbox; nodejs server.js &
    setpid mapbox1 $!
    cd /opt/srv/geojson.io; serve -p 8001 &
    setpid mapbox2 $!
    /etc/init.d/nginx restart
    wait
  }

  live-stop()
  {
    /etc/init.d/nginx stop
    unsetpid mapbox1
    unsetpid mapbox2
  }

  live()
  {
    cmd=$1; shift
    case $cmd in
      start)
        live-start $*
        ;;
      stop)
        live-stop $*
        ;;
      *)
        die $S__NO_SUCH_COMMAND "invalid command: $cmd"
        ;;
    esac
  }

  run()
  {
    cmd=$1; shift
    $cmd $*
  }

  sigint()
  {
    (>&2 echo "shutting down")
    /etc/init.d/nginx stop
    kill 0
  }

  trap sigint SIGINT

  cmd=$1; shift
  case $cmd in
    nginx)
      /etc/init.d/nginx $*
      ;;
    apache2ctl)
      /usr/sbin/apache2ctl $*
      ;;
    start)
      live start $*
      ;;
    stop)
      live stop $*
      ;;
    util)
      util $*
      ;;
    *)
      die $S__NO_SUCH_COMMAND "invalid command: $cmd"
      ;;
  esac

  exit $S__SUCCESS

## *EOF*
